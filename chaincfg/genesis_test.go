// Copyright (c) 2014-2016 The btcsuite developers
// Use of this source code is governed by an ISC
// license that can be found in the LICENSE file.

package chaincfg

import (
	"bytes"
	"testing"

	"github.com/davecgh/go-spew/spew"
)

// TestGenesisBlock tests the genesis block of the main network for validity by
// checking the encoded bytes and hashes.
func TestGenesisBlock(t *testing.T) {
	// Encode the genesis block to raw bytes.
	var buf bytes.Buffer
	err := MainNetParams.GenesisBlock.Serialize(&buf)
	if err != nil {
		t.Fatalf("TestGenesisBlock: %v", err)
	}

	// Ensure the encoded block matches the expected bytes.
	if !bytes.Equal(buf.Bytes(), genesisBlockBytes) {
		t.Fatalf("TestGenesisBlock: Genesis block does not appear valid - "+
			"got %v, want %v", spew.Sdump(buf.Bytes()),
			spew.Sdump(genesisBlockBytes))
	}

	// Check hash of the block against expected hash.
	hash := MainNetParams.GenesisBlock.BlockHash()
	if !MainNetParams.GenesisHash.IsEqual(&hash) {
		t.Fatalf("TestGenesisBlock: Genesis block hash does not "+
			"appear valid - got %v, want %v", spew.Sdump(hash),
			spew.Sdump(MainNetParams.GenesisHash))
	}
}

// TestRegTestGenesisBlock tests the genesis block of the regression test
// network for validity by checking the encoded bytes and hashes.
func TestRegTestGenesisBlock(t *testing.T) {
	// Encode the genesis block to raw bytes.
	var buf bytes.Buffer
	err := RegressionNetParams.GenesisBlock.Serialize(&buf)
	if err != nil {
		t.Fatalf("TestRegTestGenesisBlock: %v", err)
	}

	// Ensure the encoded block matches the expected bytes.
	if !bytes.Equal(buf.Bytes(), regTestGenesisBlockBytes) {
		t.Fatalf("TestRegTestGenesisBlock: Genesis block does not "+
			"appear valid - got %v, want %v",
			spew.Sdump(buf.Bytes()),
			spew.Sdump(regTestGenesisBlockBytes))
	}

	// Check hash of the block against expected hash.
	hash := RegressionNetParams.GenesisBlock.BlockHash()
	if !RegressionNetParams.GenesisHash.IsEqual(&hash) {
		t.Fatalf("TestRegTestGenesisBlock: Genesis block hash does "+
			"not appear valid - got %v, want %v", spew.Sdump(hash),
			spew.Sdump(RegressionNetParams.GenesisHash))
	}
}

// TestTestNet4GenesisBlock tests the genesis block of the test network (version
// 3) for validity by checking the encoded bytes and hashes.
func TestTestNet4GenesisBlock(t *testing.T) {
	// Encode the genesis block to raw bytes.
	var buf bytes.Buffer
	err := TestNet4Params.GenesisBlock.Serialize(&buf)
	if err != nil {
		t.Fatalf("TestTestNet4GenesisBlock: %v", err)
	}

	// Ensure the encoded block matches the expected bytes.
	if !bytes.Equal(buf.Bytes(), testNet4GenesisBlockBytes) {
		t.Fatalf("TestTestNet4GenesisBlock: Genesis block does not "+
			"appear valid - got %v, want %v",
			spew.Sdump(buf.Bytes()),
			spew.Sdump(testNet4GenesisBlockBytes))
	}

	// Check hash of the block against expected hash.
	hash := TestNet4Params.GenesisBlock.BlockHash()
	if !TestNet4Params.GenesisHash.IsEqual(&hash) {
		t.Fatalf("TestTestNet4GenesisBlock: Genesis block hash does "+
			"not appear valid - got %v, want %v", spew.Sdump(hash),
			spew.Sdump(TestNet4Params.GenesisHash))
	}
}

// TestSimNetGenesisBlock tests the genesis block of the simulation test network
// for validity by checking the encoded bytes and hashes.
func TestSimNetGenesisBlock(t *testing.T) {
	// Encode the genesis block to raw bytes.
	var buf bytes.Buffer
	err := SimNetParams.GenesisBlock.Serialize(&buf)
	if err != nil {
		t.Fatalf("TestSimNetGenesisBlock: %v", err)
	}

	// Ensure the encoded block matches the expected bytes.
	if !bytes.Equal(buf.Bytes(), simNetGenesisBlockBytes) {
		t.Fatalf("TestSimNetGenesisBlock: Genesis block does not "+
			"appear valid - got %v, want %v",
			spew.Sdump(buf.Bytes()),
			spew.Sdump(simNetGenesisBlockBytes))
	}

	// Check hash of the block against expected hash.
	hash := SimNetParams.GenesisBlock.BlockHash()
	if !SimNetParams.GenesisHash.IsEqual(&hash) {
		t.Fatalf("TestSimNetGenesisBlock: Genesis block hash does "+
			"not appear valid - got %v, want %v", spew.Sdump(hash),
			spew.Sdump(SimNetParams.GenesisHash))
	}
}

// genesisBlockBytes are the wire encoded bytes for the genesis block of the
// main network as of protocol version 60002.
var genesisBlockBytes = []byte{
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0xA6, 0x4B, 0xAC, 0x07, 0xFE, 0x31, 0x87, 0x7F, 0x31, 0xD0, 0x32, 0x52, /* |.....K...1..1.2R| */
	0x95, 0x3B, 0x3C, 0x32, 0x39, 0x89, 0x33, 0xAF, 0x7A, 0x72, 0x41, 0x19, 0xBC, 0x4D, 0x6F, 0xA4, /* |.;<29.3.zrA..Mo.| */
	0xA8, 0x05, 0xE4, 0x35, 0xF0, 0x83, 0xC2, 0x52, 0xF0, 0xFF, 0x0F, 0x1E, 0x66, 0xD6, 0x12, 0x00, /* |...5...R....f...| */
	0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x04, 0xFF, 0xFF, 0x00, 0x1D, /* |.........._.....| */
	0x01, 0x04, 0x4C, 0x56, 0x44, 0x65, 0x63, 0x2E, 0x20, 0x33, 0x31, 0x74, 0x68, 0x20, 0x32, 0x30, /* |..LVDec. 31th 20| */
	0x31, 0x33, 0x20, 0x4A, 0x61, 0x70, 0x61, 0x6E, 0x2C, 0x20, 0x54, 0x68, 0x65, 0x20, 0x77, 0x69, /* |13 Japan, The wi| */
	0x6E, 0x6E, 0x69, 0x6E, 0x67, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73, 0x20, 0x6F, 0x66, /* |nning numbers of| */
	0x20, 0x74, 0x68, 0x65, 0x20, 0x32, 0x30, 0x31, 0x33, 0x20, 0x59, 0x65, 0x61, 0x72, 0x2D, 0x45, /* | the 2013 Year-E| */
	0x6E, 0x64, 0x20, 0x4A, 0x75, 0x6D, 0x62, 0x6F, 0x20, 0x4C, 0x6F, 0x74, 0x74, 0x65, 0x72, 0x79, /* |nd Jumbo Lottery| */
	0x3A, 0x32, 0x33, 0x2D, 0x31, 0x33, 0x30, 0x39, 0x31, 0x36, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, /* |:23-130916......| */
	0xF2, 0x05, 0x2A, 0x01, 0x00, 0x00, 0x00, 0x43, 0x41, 0x04, 0x01, 0x84, 0x71, 0x0F, 0xA6, 0x89, /* |..*....CA...q...| */
	0xAD, 0x50, 0x23, 0x69, 0x0C, 0x80, 0xF3, 0xA4, 0x9C, 0x8F, 0x13, 0xF8, 0xD4, 0x5B, 0x8C, 0x85, /* |.P#i.........[..| */
	0x7F, 0xBC, 0xBC, 0x8B, 0xC4, 0xA8, 0xE4, 0xD3, 0xEB, 0x4B, 0x10, 0xF4, 0xD4, 0x60, 0x4F, 0xA0, /* |.........K...`O.| */
	0x8D, 0xCE, 0x60, 0x1A, 0xAF, 0x0F, 0x47, 0x02, 0x16, 0xFE, 0x1B, 0x51, 0x85, 0x0B, 0x4A, 0xCF, /* |..`...G....Q..J.| */
	0x21, 0xB1, 0x79, 0xC4, 0x50, 0x70, 0xAC, 0x7B, 0x03, 0xA9, 0xAC, 0x00, 0x00, 0x00, 0x00, /* |!.y.Pp.{.......| */
}

// regTestGenesisBlockBytes are the wire encoded bytes for the genesis block of
// the regression test network as of protocol version 60002.
var regTestGenesisBlockBytes = []byte{
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0xA6, 0x4B, 0xAC, 0x07, 0xFE, 0x31, 0x87, 0x7F, 0x31, 0xD0, 0x32, 0x52, /* |.....K...1..1.2R| */
	0x95, 0x3B, 0x3C, 0x32, 0x39, 0x89, 0x33, 0xAF, 0x7A, 0x72, 0x41, 0x19, 0xBC, 0x4D, 0x6F, 0xA4, /* |.;<29.3.zrA..Mo.| */
	0xA8, 0x05, 0xE4, 0x35, 0xDA, 0xE5, 0x49, 0x4D, 0xFF, 0xFF, 0x7F, 0x20, 0x00, 0x00, 0x00, 0x00, /* |...5..IM... ....| */
	0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x04, 0xFF, 0xFF, 0x00, 0x1D, /* |.........._.....| */
	0x01, 0x04, 0x4C, 0x56, 0x44, 0x65, 0x63, 0x2E, 0x20, 0x33, 0x31, 0x74, 0x68, 0x20, 0x32, 0x30, /* |..LVDec. 31th 20| */
	0x31, 0x33, 0x20, 0x4A, 0x61, 0x70, 0x61, 0x6E, 0x2C, 0x20, 0x54, 0x68, 0x65, 0x20, 0x77, 0x69, /* |13 Japan, The wi| */
	0x6E, 0x6E, 0x69, 0x6E, 0x67, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73, 0x20, 0x6F, 0x66, /* |nning numbers of| */
	0x20, 0x74, 0x68, 0x65, 0x20, 0x32, 0x30, 0x31, 0x33, 0x20, 0x59, 0x65, 0x61, 0x72, 0x2D, 0x45, /* | the 2013 Year-E| */
	0x6E, 0x64, 0x20, 0x4A, 0x75, 0x6D, 0x62, 0x6F, 0x20, 0x4C, 0x6F, 0x74, 0x74, 0x65, 0x72, 0x79, /* |nd Jumbo Lottery| */
	0x3A, 0x32, 0x33, 0x2D, 0x31, 0x33, 0x30, 0x39, 0x31, 0x36, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, /* |:23-130916......| */
	0xF2, 0x05, 0x2A, 0x01, 0x00, 0x00, 0x00, 0x43, 0x41, 0x04, 0x01, 0x84, 0x71, 0x0F, 0xA6, 0x89, /* |..*....CA...q...| */
	0xAD, 0x50, 0x23, 0x69, 0x0C, 0x80, 0xF3, 0xA4, 0x9C, 0x8F, 0x13, 0xF8, 0xD4, 0x5B, 0x8C, 0x85, /* |.P#i.........[..| */
	0x7F, 0xBC, 0xBC, 0x8B, 0xC4, 0xA8, 0xE4, 0xD3, 0xEB, 0x4B, 0x10, 0xF4, 0xD4, 0x60, 0x4F, 0xA0, /* |.........K...`O.| */
	0x8D, 0xCE, 0x60, 0x1A, 0xAF, 0x0F, 0x47, 0x02, 0x16, 0xFE, 0x1B, 0x51, 0x85, 0x0B, 0x4A, 0xCF, /* |..`...G....Q..J.| */
	0x21, 0xB1, 0x79, 0xC4, 0x50, 0x70, 0xAC, 0x7B, 0x03, 0xA9, 0xAC, 0x00, 0x00, 0x00, 0x00, /* |!.y.Pp.{.......| */
}

// testNet4GenesisBlockBytes are the wire encoded bytes for the genesis block of
// the test network (version 3) as of protocol version 60002.
var testNet4GenesisBlockBytes = []byte{
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0xA6, 0x4B, 0xAC, 0x07, 0xFE, 0x31, 0x87, 0x7F, 0x31, 0xD0, 0x32, 0x52, /* |.....K...1..1.2R| */
	0x95, 0x3B, 0x3C, 0x32, 0x39, 0x89, 0x33, 0xAF, 0x7A, 0x72, 0x41, 0x19, 0xBC, 0x4D, 0x6F, 0xA4, /* |.;<29.3.zrA..Mo.| */
	0xA8, 0x05, 0xE4, 0x35, 0xEC, 0x2D, 0xBF, 0x58, 0xF0, 0xFF, 0x0F, 0x1E, 0x6C, 0x64, 0x20, 0x00, /* |...5.-.X....ld .| */
	0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x04, 0xFF, 0xFF, 0x00, 0x1D, /* |.........._.....| */
	0x01, 0x04, 0x4C, 0x56, 0x44, 0x65, 0x63, 0x2E, 0x20, 0x33, 0x31, 0x74, 0x68, 0x20, 0x32, 0x30, /* |..LVDec. 31th 20| */
	0x31, 0x33, 0x20, 0x4A, 0x61, 0x70, 0x61, 0x6E, 0x2C, 0x20, 0x54, 0x68, 0x65, 0x20, 0x77, 0x69, /* |13 Japan, The wi| */
	0x6E, 0x6E, 0x69, 0x6E, 0x67, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73, 0x20, 0x6F, 0x66, /* |nning numbers of| */
	0x20, 0x74, 0x68, 0x65, 0x20, 0x32, 0x30, 0x31, 0x33, 0x20, 0x59, 0x65, 0x61, 0x72, 0x2D, 0x45, /* | the 2013 Year-E| */
	0x6E, 0x64, 0x20, 0x4A, 0x75, 0x6D, 0x62, 0x6F, 0x20, 0x4C, 0x6F, 0x74, 0x74, 0x65, 0x72, 0x79, /* |nd Jumbo Lottery| */
	0x3A, 0x32, 0x33, 0x2D, 0x31, 0x33, 0x30, 0x39, 0x31, 0x36, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, /* |:23-130916......| */
	0xF2, 0x05, 0x2A, 0x01, 0x00, 0x00, 0x00, 0x43, 0x41, 0x04, 0x01, 0x84, 0x71, 0x0F, 0xA6, 0x89, /* |..*....CA...q...| */
	0xAD, 0x50, 0x23, 0x69, 0x0C, 0x80, 0xF3, 0xA4, 0x9C, 0x8F, 0x13, 0xF8, 0xD4, 0x5B, 0x8C, 0x85, /* |.P#i.........[..| */
	0x7F, 0xBC, 0xBC, 0x8B, 0xC4, 0xA8, 0xE4, 0xD3, 0xEB, 0x4B, 0x10, 0xF4, 0xD4, 0x60, 0x4F, 0xA0, /* |.........K...`O.| */
	0x8D, 0xCE, 0x60, 0x1A, 0xAF, 0x0F, 0x47, 0x02, 0x16, 0xFE, 0x1B, 0x51, 0x85, 0x0B, 0x4A, 0xCF, /* |..`...G....Q..J.| */
	0x21, 0xB1, 0x79, 0xC4, 0x50, 0x70, 0xAC, 0x7B, 0x03, 0xA9, 0xAC, 0x00, 0x00, 0x00, 0x00, /* |!.y.Pp.{.......| */
}

// simNetGenesisBlockBytes are the wire encoded bytes for the genesis block of
// the simulation test network as of protocol version 70002.
var simNetGenesisBlockBytes = []byte{
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x3b, 0xa3, 0xed, 0xfd, 0x7a, 0x7b, 0x12, 0xb2, 0x7a, 0xc7, 0x2c, 0x3e, /* |....;...z{..z.,>| */
	0x67, 0x76, 0x8f, 0x61, 0x7f, 0xc8, 0x1b, 0xc3, 0x88, 0x8a, 0x51, 0x32, 0x3a, 0x9f, 0xb8, 0xaa, /* |gv.a......Q2:...| */
	0x4b, 0x1e, 0x5e, 0x4a, 0x45, 0x06, 0x86, 0x53, 0xff, 0xff, 0x7f, 0x20, 0x02, 0x00, 0x00, 0x00, /* |K.^JE..S... ....| */
	0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* |................| */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x5f, 0x04, 0xff, 0xff, 0x00, 0x1d, /* |.........._.....| */
	0x01, 0x04, 0x4c, 0x56, 0x44, 0x65, 0x63, 0x2e, 0x20, 0x33, 0x31, 0x74, 0x68, 0x20, 0x32, 0x30, /* |..LVDec. 31th 20| */
	0x31, 0x33, 0x20, 0x4a, 0x61, 0x70, 0x61, 0x6e, 0x2c, 0x20, 0x54, 0x68, 0x65, 0x20, 0x77, 0x69, /* |13 Japan, The wi| */
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x66, /* |nning numbers of| */
	0x20, 0x74, 0x68, 0x65, 0x20, 0x32, 0x30, 0x31, 0x33, 0x20, 0x59, 0x65, 0x61, 0x72, 0x2d, 0x45, /* | the 2013 Year-E| */
	0x6e, 0x64, 0x20, 0x4a, 0x75, 0x6d, 0x62, 0x6f, 0x20, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, /* |nd Jumbo Lottery| */
	0x3a, 0x32, 0x33, 0x2d, 0x31, 0x33, 0x30, 0x39, 0x31, 0x36, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, /* |:23-130916......| */
	0xf2, 0x05, 0x2a, 0x01, 0x00, 0x00, 0x00, 0x43, 0x41, 0x04, 0x01, 0x84, 0x71, 0x0f, 0xa6, 0x89, /* |..*....CA...q...| */
	0xad, 0x50, 0x23, 0x69, 0x0c, 0x80, 0xf3, 0xa4, 0x9c, 0x8f, 0x13, 0xf8, 0xd4, 0x5b, 0x8c, 0x85, /* |.P#i.........[..| */
	0x7f, 0xbc, 0xbc, 0x8b, 0xc4, 0xa8, 0xe4, 0xd3, 0xeb, 0x4b, 0x10, 0xf4, 0xd4, 0x60, 0x4f, 0xa0, /* |.........K...`O.| */
	0x8d, 0xce, 0x60, 0x1a, 0xaf, 0x0f, 0x47, 0x02, 0x16, 0xfe, 0x1b, 0x51, 0x85, 0x0b, 0x4a, 0xcf, /* |..`...G....Q..J.| */
	0x21, 0xb1, 0x79, 0xc4, 0x50, 0x70, 0xac, 0x7b, 0x03, 0xa9, 0xac, 0x00, 0x00, 0x00, 0x00, /* |!.y.Pp.{.......| */
}
